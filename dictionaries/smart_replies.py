# dictionaries/smart_replies.py

import re

# –°–ª–æ–≤–∞—Ä—å —É–º–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
TEXT_RESPONSES = {
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    "–ø—Ä–∏–≤–µ—Ç": "–ü—Ä–∏–≤–µ—Ç! üëã –ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?",
    "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
    "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! üåû –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
    "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä": "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! üåô –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å.",

    # –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    "—Å–ø–∞—Å–∏–±–æ": "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω—É–∂–Ω–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ. üôå",
    "–±–ª–∞–≥–æ–¥–∞—Ä—é": "–ë–ª–∞–≥–æ–¥–∞—Ä—é –≤–∞—Å –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! üòä",
    "—Å–ø—Å": "–ù–µ –∑–∞ —á—Ç–æ! –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å. üòâ",

    # –í–æ–ø—Ä–æ—Å—ã –ø—Ä–æ –±–æ—Ç–∞
    "–∫—Ç–æ —Ç—ã": "–Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å–∏—Å—Ç–µ–º–µ! ü§ñ –ù–∞–ø–∏—à–∏—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å.",
    "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å": "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å –∑–∞–∫–∞–∑–∞–º–∏, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ!",

    # –û—à–∏–±–æ—á–Ω—ã–µ –∏–ª–∏ —Ä–∞—Å—Ç–µ—Ä—è–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    "—è –Ω–µ –ø–æ–Ω–∏–º–∞—é": "–í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å. üßê",
    "—á—Ç–æ –¥–µ–ª–∞—Ç—å": "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å. –Ø –ø–æ–º–æ–≥—É! üòä",
    "–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è": "–û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ! –ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –∏–ª–∏ –∑–∞–¥–∞–≤–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å—ã.",

    # –ü—Ä–æ–±–ª–µ–º—ã
    "–æ—à–∏–±–∫–∞": "–û–π! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫? –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å. üöë",
    "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç": "–≠—Ç–æ –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ! üòî –û–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–±–ª–µ–º—É, —á—Ç–æ–±—ã —è —Å–º–æ–≥ –ø–æ–º–æ—á—å.",
    "–ø–æ–º–æ—â—å": "–ö–æ–Ω–µ—á–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π 'üÜò –ü–æ–º–æ—â—å'.",

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    "–ø–æ–∫–∞": "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è.",
    "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è": "–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á! üòä –£–¥–∞—á–∏ –≤–∞–º.",

    # –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    "default": "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é. ü§î",

    # –ú–∞—Ç–µ—Ä–Ω–æ–µ
    "–∏–¥–∏ –Ω–∞ —Ö—É–π": "–¢—ã —É–≤–æ–ª–µ–Ω!!!",
}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
def get_smart_reply(user_text: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è TEXT_RESPONSES –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞.
    """
    # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
    user_text = user_text.lower().strip()  # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤
    user_text = re.sub(r'[^\w\s]', '', user_text)  # –£–¥–∞–ª—è–µ–º –ø—É–Ω–∫—Ç—É–∞—Ü–∏—é

    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫ –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫
    corrections = {
        "–ø—Ä–µ–≤–µ—Ç": "–ø—Ä–∏–≤–µ—Ç",
        "—Å–ø—Å": "—Å–ø–∞—Å–∏–±–æ",
        "–∑–¥–∞—Ä–æ–≤–∞": "–ø—Ä–∏–≤–µ—Ç",
        "–π–æ": "–ø—Ä–∏–≤–µ—Ç",
    }
    user_text = corrections.get(user_text, user_text)  # –ó–∞–º–µ–Ω—è–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è TEXT_RESPONSES –∏–ª–∏ default
    return TEXT_RESPONSES.get(user_text, TEXT_RESPONSES["default"])

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤):
# if __name__ == "__main__":
#     while True:
#         user_input = input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
#         print(get_smart_reply(user_input))
